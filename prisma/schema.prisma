// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  name       String
  password   String
  email      String       @unique
  tasks      Task[]
  discipline Discipline[]
}

model Task {
  id          Int       @id @default(autoincrement())
  name        String
  description String
  dateWishEnd DateTime  @db.Date
  dateEnd     DateTime? @db.Date
  userId      Int
  user        User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  subTasks    SubTask[]
}

model SubTask {
  id          Int     @id @default(autoincrement())
  description String
  status      Boolean
  taskId      Int
  task        Task?   @relation(fields: [taskId], references: [id], onDelete: Cascade)
}

model Discipline {
  id          Int                   @id @default(autoincrement())
  nameTeacher String
  status      StatusDiscipline      @default(DISAPPROVED)
  typeAv      TypeAverageDiscipline
  noteMin     Float
  name        String
  userId      Int
  user        User?                 @relation(fields: [userId], references: [id], onDelete: Cascade)
  activity    Activity[]
}

model Activity {
  id           Int        @id @default(autoincrement())
  description  String?
  date         DateTime
  note         Float      @default(0) //COLOAR DEFAULT 0 OBRIGATÓRIO
  weight       Float? //SE FOR MÉDIA SIMPLES SERÁ DESCONSIDERADO
  comment      String?
  name         String
  disciplineId Int
  discipline   Discipline @relation(fields: [disciplineId], references: [id], onDelete: Cascade)
}

enum StatusDiscipline {
  APPROVED
  DISAPPROVED
}

enum TypeAverageDiscipline {
  SIMPLE
  WEIGHTED
}
